// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: grammar.sql

package database

import (
	"context"
	"database/sql"
	"encoding/json"

	"github.com/google/uuid"
)

const createGrammar = `-- name: CreateGrammar :one
INSERT INTO grammar (grammarId, grammarTopic, examples, pageRefrence, chapterNumber) 
VALUES ($1, $2, $3, $4, $5) 
RETURNING grammarid, grammartopic, examples, pagerefrence, chapternumber
`

type CreateGrammarParams struct {
	Grammarid     uuid.UUID
	Grammartopic  string
	Examples      json.RawMessage
	Pagerefrence  sql.NullString
	Chapternumber string
}

func (q *Queries) CreateGrammar(ctx context.Context, arg CreateGrammarParams) (Grammar, error) {
	row := q.db.QueryRowContext(ctx, createGrammar,
		arg.Grammarid,
		arg.Grammartopic,
		arg.Examples,
		arg.Pagerefrence,
		arg.Chapternumber,
	)
	var i Grammar
	err := row.Scan(
		&i.Grammarid,
		&i.Grammartopic,
		&i.Examples,
		&i.Pagerefrence,
		&i.Chapternumber,
	)
	return i, err
}
